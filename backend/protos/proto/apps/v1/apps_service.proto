syntax = "proto3";

package apps.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "apps.v1";

service AppService {
  rpc CreateApp(CreateAppRequest) returns (App) {
    option (google.api.http) = {
      post: "/v1/apps"
      body: "*"
    };
  }
  rpc UpdateApp(UpdateAppRequest) returns (App) {
    option (google.api.http) = {
      put: "/v1/apps/{id}"
      body: "*"
    };
  }
  rpc DeleteApp(DeleteAppRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/apps/{id}"
    };
  }

  rpc GetAppById(GetAppRequest) returns (App) {
    option (google.api.http) = {
      get: "/v1/apps/{id}"
    };
  }
  rpc GetAppByCode(GetAppByCodeRequest) returns (App) {
    option (google.api.http) = {
      get: "/v1/apps/code/{code}"
    };
  }
  rpc ListApps(ListAppsRequest) returns (ListAppsResponse) {
    option (google.api.http) = {
      get: "/v1/apps"
    };
  }
}

message App {
  int32 id = 1;
  string code = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 50,
    pattern: "^[a-zA-Z0-9_-]+$"
  }];
  string name = 3 [(validate.rules).string = {
    min_len: 1,
    max_len: 250
  }];
  optional string description = 4 [(validate.rules).string.max_len = 1000];
  int32 version = 5 [(validate.rules).int32.gte = 1];
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  optional google.protobuf.Timestamp deleted_at = 8;
}

message CreateAppRequest {
  string code = 1 [(validate.rules).string = {
    min_len: 1,
    max_len: 50,
    pattern: "^[a-zA-Z0-9_-]+$"
  }];
  string name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 250
  }];
  optional string description = 3 [(validate.rules).string.max_len = 1000];
  optional int32 version = 4 [(validate.rules).int32.gte = 1];
}

message GetAppRequest {
  int32 id = 1 [(validate.rules).int32.gt = 0];
}

message GetAppByCodeRequest {
  string code = 1 [(validate.rules).string = {
    min_len: 1,
    max_len: 50,
    pattern: "^[a-zA-Z0-9_-]+$"
  }];
}

message UpdateAppRequest {
  int32 id = 1 [(validate.rules).int32.gt = 0];
  optional string name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 250
  }];
  optional string description = 3 [(validate.rules).string.max_len = 1000];
  optional int32 version = 4 [(validate.rules).int32.gte = 1];
}

message DeleteAppRequest {
  int32 id = 1 [(validate.rules).int32.gt = 0];
}

message ListAppsRequest {
  bool include_deleted = 1;
  optional string filter = 2 [(validate.rules).string.max_len = 200];
  optional string order_by = 3 [(validate.rules).string = {
    in: ["id", "name", "code", "created_at", "updated_at"]
  }];
}

message ListAppsResponse {
  repeated App apps = 1;
}