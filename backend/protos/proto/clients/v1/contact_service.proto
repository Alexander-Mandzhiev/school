syntax = "proto3";

package contacts.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "contacts.v1";

service ContactsService {
  rpc CreateContact(CreateContactRequest) returns (Contact) {
    option (google.api.http) = {
      post: "/v1/contacts"
      body: "*"
    };
  }
  rpc UpdateContact(UpdateContactRequest) returns (Contact) {
    option (google.api.http) = {
      put: "/v1/contacts/{id}"
      body: "*"
    };
  }

  rpc GetContact(GetContactRequest) returns (Contact) {
    option (google.api.http) = {
      get: "/v1/contacts/{id}"
    };
  }
  rpc ListContactsByClient(ListContactsByClientRequest) returns (ListContactsResponse) {
    option (google.api.http) = {
      get: "/v1/clients/{client_id}/contacts"
    };
  }

  rpc SoftDeleteContact(DeleteContactRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/contacts/{id}"
    };
  }
  rpc HardDeleteContact(DeleteContactRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/contacts/{id}/hard"
    };
  }
  rpc RestoreContact(RestoreContactRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/contacts/{id}/restore"
      body: "*"
    };
  }
}

message Contact {
  string id = 1;
  string client_id = 2 [(validate.rules).string = {
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
  string full_name = 3 [(validate.rules).string = {
    min_len: 1,
    max_len: 255
  }];
  optional string position = 4 [(validate.rules).string.max_len = 255];
  optional string email = 5 [(validate.rules).string = {
    email: true,
    max_len: 320
  }];
  optional string phone = 6 [(validate.rules).string = {
    pattern: "^[+]?[0-9\\s\\-\\(\\)]{7,30}$",
    max_len: 30
  }];
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  optional google.protobuf.Timestamp deleted_at = 9;
}

message CreateContactRequest {
  string client_id = 1 [(validate.rules).string = {
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
  string full_name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 255
  }];
  optional string position = 3 [(validate.rules).string.max_len = 255];
  optional string email = 4 [(validate.rules).string = {
    email: true,
    max_len: 320
  }];
  optional string phone = 5 [(validate.rules).string = {
    pattern: "^[+]?[0-9\\s\\-\\(\\)]{7,30}$",
    max_len: 30
  }];
}

message GetContactRequest {
  string id = 1 [(validate.rules).string = {
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
  optional bool include_deleted = 2;
}

message UpdateContactRequest {
  string id = 1 [(validate.rules).string = {
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
  optional string full_name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 255
  }];
  optional string position = 3 [(validate.rules).string.max_len = 255];
  optional string email = 4 [(validate.rules).string = {
    email: true,
    max_len: 320
  }];
  optional string phone = 5 [(validate.rules).string = {
    pattern: "^[+]?[0-9\\s\\-\\(\\)]{7,30}$",
    max_len: 30
  }];
}

message DeleteContactRequest {
  string id = 1 [(validate.rules).string = {
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
}

message RestoreContactRequest {
  string id = 1 [(validate.rules).string = {
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
}

message ListContactsByClientRequest {
  string client_id = 1 [(validate.rules).string = {
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  }];
  optional bool include_deleted = 2;
}

message ListContactsResponse {
  repeated Contact contacts = 1;
}